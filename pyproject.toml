[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["brazil_fiscal_client*"]

[project]
name = "brazil-fiscal-client"
description = "SOAP client for the Brazilian Fiscal Authorities"
authors = [{name = "Raphael Valyi", email = "raphael.valyi@akretion.com"}]
license = {text = "MIT"}
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Topic :: Software Development",
]
keywords = ["soap", "wsdl", "nfe", "fazenda", "binding", "nfelib", "odoo"]
requires-python = ">=3.8"
dependencies = [
    "xsdata",
    "requests",
    "requests-pkcs12"
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/akretion/brazil-fiscal-client"
Source = "https://github.com/akretion/brazil-fiscal-client"
Documentation = "https://github.com/akretion/brazil-fiscal-client"

[project.optional-dependencies]
test = [
    "pre-commit",
    "pytest",
    "pytest-cov",
]

[project.scripts]
xsdata = "xsdata.__main__:main"

[tool.setuptools]
include-package-data = true
license-files = ["LICENSE"]

[tool.setuptools.dynamic]
version = {attr = "brazil_fiscal_client.__version__"}

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # flake8-annotations
    "ANN",
    # flake8-comprehensions
    "C4",
    # isort
    "I",
    # pydocstyle
    "D",
    # flake-raise
    "RSE",
    # flake-return
    "RET",
    # Ruff rules
    "RUF",
]

ignore = [
    "ANN101",
    "ANN102",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN206",
    "ANN401",
    "E203",
    "B028",
    "B904",
    "D100",
    "D104",
    "D107",
    "RUF009",
    "RUF012",
]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["ANN001", "ANN002", "ANN003", "E501", "B018", "D"]
"**/utils/testing.py" = ["D"]
"docs/*" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
line-ending = "lf"

[tool.pytest.ini_options]
addopts = "--color=yes"
doctest_optionflags = "NORMALIZE_WHITESPACE"
